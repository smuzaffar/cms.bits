function runIt(){
  if [[ -v $1 ]]; then
   eval "${!1}"
  elif declare -F "$1" > /dev/null; then
    $1
  fi
}

function isDefined(){
  if [[ ! -v $1 ]]; then declare -F "$1"; fi
}
function chkDefined(){
  if ! isDefined $1 ; then eval "$1=\"$2\"" ; fi
}

[ "${Pypi_name}" != "" ] || Pypi_name=$(echo ${PKGNAME} | cut -f2-10 -d-)
chkDefined PipUnpackCommand "tar -xzf ${SOURCEDIR}/${SOURCE0}"
chkDefined PipPackageNameCommand "pip3 show ${Pypi_name} --disable-pip-version-check | grep '^Name:' | sed 's|^Name: *||;s| ||g'"
chkDefined PipDepsPost "xargs --no-run-if-empty echo"
chkDefined PipDepsMatch "grep \\\"^\\\${PKG_NAME}  *${PKGVERSION}  *requires \\\" | sed 's|,.*||;s|.* |py-|'"
chkDefined PipDepsCommand "pip3 check --disable-pip-version-check"
chkDefined PipInstallCommand "pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v ${PipInstallOptions} ${PipBuildOptions} \\\${PYPI_SRC}"

runIt PipPrePrep
rm -rf cmsdist-patch-${PKGNAME}
mkdir cmsdist-patch-${PKGNAME}
pushd cmsdist-patch-${PKGNAME}
  runIt PipUnpackCommand
  pip_package_dirname=$(ls -d *)
  PYPI_SRC="${BUILDDIR}"/${pip_package_dirname}
  mv ${pip_package_dirname} "${PYPI_SRC}"
popd
rm -rf cmsdist-patch-${PKGNAME}

pushd $PYPI_SRC
  if [ "${PATCH_COUNT}" -gt 0 ] ; then
    for (( num=0; num<${PATCH_COUNT}; num++ )) ; do
      patch_name="PATCH${num}"
      echo "Applying patch ${!patch_name}"
      patch  --verbose -p1 < $SOURCEDIR/${!patch_name}
    done
  fi
  runIt PipPatchSource
popd
runIt PipPostPrep


export PYTHONUSERBASE="$INSTALLROOT"
export TMPDIR="$BUILDDIR/bits-tmp"
mkdir -p $TMPDIR
unset PIP_ROOT
pip3 list --disable-pip-version-check
runIt PipPreBuildPy
runIt PipInstallCommand
PKG_NAME=$(runIt PipPackageNameCommand)
[ "${PKG_NAME}" = "" ] && exit 1
pip3 check --disable-pip-version-check || true 
runIt PipDepsCommand | runIt PipDepsMatch || true
DEPS=$(runIt PipDepsCommand | runIt PipDepsMatch | runIt PipDepsPost | tr '\n' ' ') || true
if [ "$DEPS" != "" ] ; then
  echo "ERROR: Missing dependencies for ${PKGNAME} (python3) found: $DEPS"
  exit 1
fi
runIt relocatePy3SitePackages
runIt PipPostBuildPy

if [ -d "${INSTALLROOT}/bin" ] ; then
  for py in $(grep -Rl -m1 '^#\!.*python' "${INSTALLROOT}/bin") ; do
    lnum=$(grep -n -m1 '^#\!.*python' $py | sed 's|:.*||')
    sed -i -e "${lnum}c#!/usr/bin/env python3" $py
  done
fi
runIt PipPostBuild
if [ -d "${INSTALLROOT}"/bin ] ; then
  for s in $(grep -IRHl '^#!.*' "${INSTALLROOT}"/bin) ; do
    perl -p -i -e "s|^#!.*python.*|#!/usr/bin/env python3|;s| ${WORK_DIR}/.*python3 | python3 |" $s
  done
fi
[ "${RelocatePython}" = "" ] || perl -p -i -e "s|^#!.*python.*|#!/usr/bin/env python3|;s| %{cmsroot}/.*python3 | python3 |" ${RelocatePython}

#Install Section
runIt PipPreInstall
[ ! -d "${INSTALLROOT}"/bin/__pycache__ ] || rm -rf "${INSTALLROOT}"/bin/__pycache__
chmod -R a+r "${INSTALLROOT}"
find "${INSTALLROOT}" -type d -print | xargs chmod 0755
runIt PipPostInstall
